[
{
	"uri": "http://localhost:1313/vi/",
	"title": "Xử lý Tài liệu Thông minh với AWS AI Services",
	"tags": [],
	"description": "",
	"content": "Xử lý Tài liệu thông minh với AWS AI Services Tổng quan Các tài liệu chứa nhiều thông tin quý giá và có nhiều hình thức, cấu trúc khác nhau. Trong hầu hết các trường hợp, bạn phải xử lý thủ công các tài liệu này để trích xuất thông tin và hiểu biết. Việc này tốn thời gian, dễ xảy ra lỗi, tốn kém và khó mở rộng quy mô. Không chỉ cần trích xuất thông tin từ các tài liệu một cách nhanh chóng, bạn còn muốn tự động hóa các quy trình kinh doanh hiện đang phụ thuộc vào các đầu vào và sự can thiệp thủ công qua nhiều loại tệp và định dạng khác nhau.\nMục tiêu của Workshop Mục tiêu của workshop này là cung cấp cho bạn trải nghiệm thực tế trong việc hiểu và xây dựng các thành phần cần thiết để thiết lập một quy trình làm việc IDP với AWS AI services. Bạn sẽ học cách triển khai các giai đoạn khác nhau của một quy trình làm việc IDP bằng cách:\nSử dụng Amazon SageMaker Studio như một môi trường phát triển tích hợp (IDE) Học các kiến thức cơ bản về Amazon Textract và các API khác nhau có thể được sử dụng để trích xuất văn bản và xác định các mối quan hệ từ nội dung tài liệu. Huấn luyện một bộ phân loại tùy chỉnh với Amazon Comprehend và sử dụng nó để phân loại tài liệu. Huấn luyện một trình nhận dạng thực thể tùy chỉnh với Amazon Comprehend và sử dụng nó để phát hiện các thực thể cụ thể trong doanh nghiệp. Thực hiện làm giàu tài liệu bằng cách sử dụng các thực thể tùy chỉnh và xóa bỏ tài liệu bằng cách sử dụng dữ liệu hình học do Amazon Textract tạo ra. Học cách cấu hình các vòng lặp đánh giá con người của Amazon Augmented AI để xem xét thông tin đã trích xuất. Chi phí của Workshop Bạn có thể sử dụng ngay các chức năng và dịch vụ AWS cần thiết trong workshop này và thử nghiệm miễn phí trên một tài khoản AWS mới.\nSau khi hoàn thành Workshop Nếu bạn không còn sử dụng các chức năng đã triển khai sau workshop, bạn vẫn có thể phát sinh chi phí. Bạn có thể tìm thêm thông tin về vấn đề này và cách xóa các thành phần đã tạo trong phần Clean up\nNội dung Introduction Preparation Document Classification Manage session logs Port Forwarding DocumentReviewandVerification Clean up "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-1/",
	"title": "Cài đặt notebook và tải tài liệu mẫu lên Amazon S3",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cài đặt các thư viện cần thiết, nhập các mô-đun cần thiết và khởi tạo các biến. Chúng ta cũng sẽ tải các tài liệu mẫu từ kho lưu trữ của workshop và tải chúng lên bucket S3 của SageMaker để có thể xử lý. Lệnh curl dưới đây sẽ tải về tệp classification-training.zip này chứa dữ liệu cần thiết để huấn luyện bộ phân loại tùy chỉnh Amazon Comprehend Classifier.\nChạy từ Bước 1 đến 6 ITrong các ô mã tiếp theo, chúng ta sẽ giải nén tất cả các tệp từ tệp zip và sau đó tải chúng lên Amazon S3. Hoàn thành việc thực thi tất cả các ô mã trong bước này. Dữ liệu đã được tải lên S3 và có thể tìm thấy trong AWS S3. Hoặc chúng ta có thể sử dụng mã trong tệp để trích xuất dữ liệu "
},
{
	"uri": "http://localhost:1313/vi/6-documentreviewandverification/6.1/",
	"title": "Cài đặt và yêu cầu cho Amazon S3 bucket",
	"tags": [],
	"description": "",
	"content": " Chúng ta sẽ cần một Amazon S3 bucket, sẽ được sử dụng để lưu trữ dữ liệu cho các công nhân A2I. Bucket này đã được tạo như một phần của CloudFormation stack. Tên của S3 bucket nên theo mẫu idp-a2i-xxxxxxxx. Hãy truy cập vào bảng điều khiển Amazon S3 để tìm tên bucket. Đi đến S3 Cài đặt quy trình làm việc xem xét con người A2I Đi đến bảng điều khiển Amazon SageMaker và nhấp vào tùy chọn quy trình làm việc xem xét con người dưới Augmented AI trong bảng điều khiển bên trái. Sau đó nhấp vào nút Tạo quy trình làm việc xem xét con người. Cung cấp một Tên cho quy trình làm việc xem xét con người. Giá trị S3 bucket phải theo mẫu s3://idp-a2i-xxxxxx/. Trong IAM Role, chọn Tạo vai trò mới và sau đó nhập tên của S3 bucket (không bao gồm s3://, chẳng hạn như idp-a2i-xxxxxx). Dưới loại nhiệm vụ, chọn tùy chọn Textract - Trích xuất cặp khóa-giá trị. Tiếp theo, dưới mục Trích xuất biểu mẫu Amazon Textract - Các điều kiện để kích hoạt xem xét con người, chọn ô Kích hoạt xem xét con người cho tất cả các khóa biểu mẫu được xác định bởi Amazon Textract với điểm tin cậy trong một khoảng nhất định và nhập các giá trị như bên dưới. Bạn cũng có thể tùy chỉnh mẫu nhiệm vụ của người lao động, nhưng để phục vụ cho mục đích demo này, hãy chọn Tạo từ mẫu mặc định và nhập tên mẫu (ví dụ: idp-a2i-template). Dưới Worker task template design nhập Task description. Bạn cũng có thể tùy chỉnh Instructions như dưới đây. Dưới phần Workers section, chọn Private worker type. Click on the create a new team link to create a new Private Team. Dưới Add workers, chọn Invite new workers by email. Trong phần Email addresses nhập email của bạn. Dưới tên tổ chức, nhập tên công ty của bạn. For Contact Email ử dụng email của bạn để nhận hướng dẫn. Để các trường khác ở mặc định và nhấp vào Create Private Team. Quay lại Create Human flow và làm mới: Nhấp vào Create để hoàn thành việc tạo quy trình làm việc xem xét con người. Sau khi được tạo, quy trình làm việc sẽ hoạt động và sẵn sàng để sử dụng. "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/3.1-getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": "Trong notebook đầu tiên, chúng ta sẽ tải lên các sao kê ngân hàng, hóa đơn và biên lai này vào một bucket Amazon S3, sử dụng Amazon Textract để trích xuất văn bản thô từ các tài liệu, gắn nhãn dữ liệu phù hợp, và sau đó huấn luyện một bộ phân loại tùy chỉnh của Amazon Comprehend với dữ liệu đã được gắn nhãn.\nMở notebook đầu tiên có tiêu đề 01-idp-prep-document-classification.ipynb. Bạn sẽ được nhắc chọn một image và kernel. Chọn các tùy chọn như hình dưới đây và nhấn Select . Notebook sẽ tự động gắn vào một instance ml.t3.medium (với 2vCPU và 4GiB bộ nhớ). Nếu không, nhấp vào \u0026ldquo;Switch instance type\u0026rdquo; và chọn ml.t3.medium từ danh sách các loại instance. ⚠️ ml.t3.medium là loại instance được ưu tiên. Vui lòng KHÔNG chọn bất kỳ loại instance nào khác vì có thể dẫn đến chi phí không mong muốn cho tài khoản.\n"
},
{
	"uri": "http://localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Tổng quan Sơ đồ kiến trúc dưới đây hiển thị các giai đoạn của quy trình xử lý tài liệu thông minh. Nó bắt đầu với giai đoạn thu thập dữ liệu để lưu trữ an toàn và tổng hợp các loại tài liệu khác nhau (pdf, jpeg, png, tiff), định dạng và bố cục. Giai đoạn tiếp theo là phân loại, đây là nơi bạn phân loại các tài liệu của mình (ví dụ như hợp đồng, biểu mẫu yêu cầu bồi thường, hóa đơn, biên lai, v.v.) tiếp theo là trích xuất tài liệu. Trong giai đoạn trích xuất, bạn có thể trích xuất thông tin kinh doanh có ý nghĩa từ các tài liệu của mình. Dữ liệu được trích xuất này thường được sử dụng để thu thập thông tin qua phân tích dữ liệu, hoặc gửi tới các hệ thống hạ nguồn như cơ sở dữ liệu hoặc hệ thống giao dịch. Giai đoạn tiếp theo là làm giàu dữ liệu, tại giai đoạn này, các tài liệu có thể được làm giàu bằng cách xóa dữ liệu PII, trích xuất các thuật ngữ tùy chỉnh trong doanh nghiệp, v.v. Cuối cùng, trong giai đoạn đánh giá/xác minh, bạn có thể đưa thêm lực lượng lao động con người để đánh giá tài liệu nhằm đảm bảo kết quả chính xác. Trước khi bắt đầu Hãy xem qua một cái nhìn tổng quan ngắn gọn về Amazon Textract, Amazon Comprehend, và Amazon Augmented AI (A2I). Đây là các dịch vụ AI của AWS sẽ được sử dụng trong workshop này.\nAmazon Textract Amazon Textract là một dịch vụ học máy tự động trích xuất văn bản, chữ viết tay và dữ liệu từ các tài liệu đã quét. Nó không chỉ dừng lại ở việc nhận dạng ký tự quang học (OCR) đơn giản, mà còn có khả năng nhận biết, hiểu và trích xuất dữ liệu từ các biểu mẫu và bảng. Hiện nay, nhiều công ty trích xuất dữ liệu thủ công từ các tài liệu đã quét như PDF, hình ảnh, bảng và biểu mẫu, hoặc thông qua phần mềm OCR đơn giản yêu cầu cấu hình thủ công (thường phải cập nhật khi biểu mẫu thay đổi). Để vượt qua các quy trình thủ công và tốn kém này, Textract sử dụng học máy để đọc và xử lý mọi loại tài liệu, trích xuất chính xác văn bản, chữ viết tay, bảng và dữ liệu khác mà không cần nỗ lực thủ công. Bạn có thể nhanh chóng tự động hóa quy trình xử lý tài liệu và hành động dựa trên thông tin đã trích xuất, cho dù bạn đang tự động hóa quy trình xử lý khoản vay hay trích xuất thông tin từ hóa đơn và biên lai. Textract có thể trích xuất dữ liệu trong vài phút thay vì hàng giờ hoặc ngày. Ngoài ra, bạn có thể thêm các đánh giá của con người với Amazon Augmented AI để giám sát các mô hình của mình và kiểm tra dữ liệu nhạy cảm.\nAmazon Comprehend Amazon Comprehend là một dịch vụ xử lý ngôn ngữ tự nhiên (NLP-natural-language processing) sử dụng học máy để khám phá thông tin từ dữ liệu không có cấu trúc. Dịch vụ này có thể xác định các yếu tố quan trọng trong dữ liệu, bao gồm các tham chiếu đến ngôn ngữ, con người, địa điểm, và các tệp văn bản có thể được phân loại theo các chủ đề liên quan. Bạn có thể tự động và chính xác phát hiện cảm xúc của con người từ nội dung do người dùng tạo ra (chẳng hạn như đánh giá sản phẩm, bài đăng trên mạng xã hội, v.v.) theo thời gian thực. Điều này giúp thúc đẩy quyết định thông minh hơn và cải thiện trải nghiệm khách hàng. Amazon Comprehend không chỉ xác định nội dung có chứa thông tin cá nhân (PII), mà còn có thể xóa và che giấu nội dung đó. Comprehend hoàn toàn được quản lý, vì vậy bạn có thể bắt đầu nhanh chóng và xử lý hàng triệu tài liệu trong vài phút bằng cách tận dụng sức mạnh của học máy.\nAmazon Augmented AI (A2I) Amazon Augmented AI là một dịch vụ học máy giúp dễ dàng xây dựng các quy trình làm việc cần thiết để có sự đánh giá của con người. Amazon A2I đưa việc đánh giá của con người đến tất cả các nhà phát triển, loại bỏ các công việc nặng nhọc không phân biệt liên quan đến việc xây dựng hệ thống đánh giá của con người hoặc quản lý số lượng lớn người đánh giá, cho dù hệ thống đó chạy trên AWS hay không. Amazon A2I tích hợp với cả Amazon Textract và Amazon Comprehend để cung cấp cho bạn khả năng đưa vào các bước đánh giá của con người trong quy trình xử lý tài liệu thông minh của mình.\n"
},
{
	"uri": "http://localhost:1313/vi/2-prerequiste/",
	"title": "Chuẩn bị ",
	"tags": [],
	"description": "",
	"content": "\rBạn cần tạo 1 tài khoản AWS để thực hiện lab này.\nNếu bạn chưa có tài khoản AWS với quyền truy cập Administrator, hãy tạo ngay bây giờ.\nTạo tài khoản AWS Triển khai CloudFormation Stack Tải xuống AWS CloudFormation bằng nút \u0026ldquo;Download Template\u0026rdquo; bên dưới và sử dụng nó trong bảng điều khiển AWS CloudFormation. Download Template. Tìm kiếm \u0026ldquo;Cloud Formation\u0026rdquo; Tạo \u0026ldquo;stack\u0026rdquo; và chọn \u0026ldquo;With new resources (standard)\u0026rdquo; Trong phần chuẩn bị template, chọn \u0026ldquo;Choose an existing template\u0026rdquo;, tại phần Specify template, chọn \u0026ldquo;Upload a template file\u0026rdquo; Và nhấn \u0026ldquo;Next\u0026rdquo;\nĐặt tên cho stack là \u0026ldquo;IDPSageMakerCfnStack\u0026rdquo;, các tham số để mặc định Và nhấn \u0026ldquo;Next\u0026rdquo;\nStep 4: Review and Create Chờ quá trình thực thi hoàn tất, bạn sẽ thấy kết quả như sau: Sau khi CloudFormation stacks được triển khai, hãy làm theo các hướng dẫn dưới đây để truy cập vào Amazon SageMaker Studio IDE. Truy cập Amazon SageMaker Studio Tìm kiếm \u0026ldquo;SageMaker\u0026rdquo; Bạn sẽ thấy trang Domains, nếu không, nhấp vào tùy chọn Domains trong menu bên trái. Tiếp theo, nhấp vào tên Domain. Note: nếu bạn đã thay đổi tên miền của mình trong mẫu CloudFormation, thì tên đó sẽ được hiển thị trong danh sách. Trong trang Domain details nhấp vào menu thả xuống Launch và chọn Studio SageMaker Studio IDE sẽ mở ra trong một tab mới của trình duyệt. Trang có thể mất vài phút để tải khi bạn truy cập vào SageMaker Studio lần đầu tiên. Khi giao diện SageMaker Studio IDE tải xong, bạn sẽ thấy màn hình như bên dưới. Nhấp vào \u0026ldquo;Studio Classic\u0026rdquo; (trên menu bên trái gần đầu). Bạn sẽ thấy một ứng dụng SageMaker Studio classic đang chạy. Nhấp vào \u0026ldquo;Open\u0026rdquo;. Bạn sẽ được chuyển hướng đến một tab trình duyệt mới với Amazon SageMaker Studio Classic IDE: Khi bạn đã ở trong Amazon SageMaker Studio IDE, bạn sẽ thấy thư mục kho lưu trữ workshop. "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-2/",
	"title": "Trích xuất văn bản từ tài liệu mẫu bằng Amazon Textract",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sử dụng API detect_document_text của Amazon Textract để trích xuất thông tin văn bản thô cho tất cả các tài liệu trong S3. Chúng ta cũng sẽ gắn nhãn dữ liệu theo loại tài liệu. Dữ liệu đã được gắn nhãn này sẽ được sử dụng để huấn luyện bộ phân loại tùy chỉnh Amazon Comprehend. Chúng ta định nghĩa một hàm tiện ích sử dụng API textract_extract_text để trích xuất văn bản từ một tài liệu, xác định loại tài liệu (hoặc thư mục trong S3) mà nó thuộc về, sau đó gắn nhãn dữ liệu và trả về một mảng[\u0026lt;label\u0026gt;, \u0026lt;document_text\u0026gt;]. Thực thi tất cả các ô mã trong bước này để chuẩn bị dữ liệu đã gắn nhãn cho việc huấn luyện bộ phân loại Comprehend. Cuối bước này, chúng ta sẽ có một tập hợp labeled_collection ẵn sàng với dữ liệu đã gắn nhãn cần thiết cho việc phân loại bằng Amazon Comprehend classification. Lưu ý rằng một giả định lớn ở đây là chúng ta đã có một tập tài liệu lịch sử đã được gắn nhãn để có thể huấn luyện một mô hình phân loại tùy chỉnh. "
},
{
	"uri": "http://localhost:1313/vi/6-documentreviewandverification/6.2/",
	"title": "Xác minh",
	"tags": [],
	"description": "",
	"content": "Bây giờ hãy quay lại notebook 04-idp-document-a2i.ipynb. Bắt đầu chạy các ô mã từ đầu. Bạn sẽ cần cung cấp một số thông tin khi tiến hành.\nNhập tên S3 bucket idp-a2i-xxxxxx để khởi tạo biến BUCKET. Chúng ta sẽ sử dụng biến BUCKET này trong suốt notebook. Bạn sẽ cần cung cấp ARN của nhóm làm việc riêng tư mà bạn đã tạo trước đó. Để tìm ARN của nhóm làm việc, hãy nhấp vào Quy trình làm việc xem xét con người mà bạn đã tạo trước và sao chép ARN từ phần Tóm tắt trong mục Lực lượng lao động. Nó sẽ có dạng \u0026lt;arn:aws:sagemaker:\u0026lt;region\u0026gt;:\u0026lt;account_id\u0026gt;:workteam/private-crowd/\u0026lt;team-name\u0026gt;. Nhập giá trị này để khởi tạo WORKTEAM_ARN trong notebook. Bây giờ chúng ta đã thiết lập định nghĩa Quy trình A2I, tất cả những gì còn lại là gọi Amazon Textract\u0026rsquo;s Analyze Document API bao gồm các tham số A2I trong HumanLoopConfig. Cung cấp ARN quy trình A2I sẽ được Amazon Textract sử dụng. Bạn có thể tìm thấy ARN quy trình trong màn hình Summary lực lượng lao động xem xét con người. Thực hiện ô mã để thực hiện AnalyzeDocument. Khi dữ liệu được trích xuất bằng Amazon Textract, các cặp khóa-giá trị sẽ xuất hiện trong cổng thông tin phân loại cho việc xem xét của con người. Sau đó, hãy vào Amazon SageMaKer -\u0026gt; Labeling workforces Nhấp vào URL đăng nhập cổng phân loại Đăng nhập vào cổng phân loại/xem xét của con người. Bạn sẽ nhận được một email với liên kết đến cổng phân loại/xem xét con người với thông tin chi tiết về cách đăng nhập và một URL cổng. Làm theo hướng dẫn trong email, bạn sẽ cần đặt lại mật khẩu để đăng nhập. Start Working. Bây giờ bạn có thể xem thông tin đã được trích xuất ở bên phải, để xác minh và thực hiện các thay đổi nếu cần. Gửi công việc khi hoàn thành. Bạn cũng có tùy chọn từ chối và phát hành nhiệm vụ nếu cần. Conclusion Trong notebook này, chúng ta đã tạo một quy trình xem xét con người A2I cho Amazon Textract bao gồm một nhóm làm việc riêng tư sử dụng Amazon Augmented AI. Sau đó, chúng ta đã sử dụng Amazon Textract để trích xuất dữ liệu từ một tài liệu mẫu và thêm một Vòng cấu hình con người cho việc xem xét của con người. Cuối cùng, chúng ta đã thực hiện một nhiệm vụ xem xét thủ công thông qua một cổng tùy chỉnh.\n"
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-3/",
	"title": "Chuẩn bị tập dữ liệu CSV để huấn luyện bộ phân loại tùy chỉnh Amazon Comprehend",
	"tags": [],
	"description": "",
	"content": "Trong bước này, dữ liệu đã trích xuất sẽ được ghi vào tệp CSV và tải lên S3. Tệp này sẽ được sử dụng làm dữ liệu huấn luyện cho bước tiếp theo. Chúng ta sẽ huấn luyện một bộ phân loại tùy chỉnh của Amazon Comprehend ở chế độ phân loại đa lớp (Multi-class) bằng cách sử dụng tệp CSV. Hãy tham khảo tài liệu hướng dẫn chuẩn bị dữ liệu cho chế độ Multi-class để huấn luyện mô hình. Các tệp CSV là các tệp văn bản thuần mã hóa UTF-8 và phải tuân theo định dạng sau:\nCLASS,Text of document 1\rCLASS,Text of document 2\rCLASS,Text of document 3 CHoàn thành việc thực thi các ô mã trong phần này để chuẩn bị tệp CSV và tải nó lên S3. Cuối bước này, chúng ta sẽ có dữ liệu huấn luyện ở định dạng CSV trong tệp có tên comprehend_train_data.csv với các lớp là bank-statements, invoices and receipts.\nBây giờ chúng ta đã trích xuất văn bản từ các tài liệu và cũng đã gắn nhãn cho chúng, chúng ta sẽ tạo dữ liệu huấn luyện để huấn luyện mô hình phân loại tùy chỉnh của Amazon Comprehend. Hãy xem qua dữ liệu đã được gắn nhãn. Chúng ta có 100 mẫu của mỗi loại tài liệu, vì vậy chúng ta sẽ có khoảng 300 dòng dữ liệu đã được gắn nhãn. Chúng ta sẽ tạo tập dữ liệu huấn luyện từ văn bản đã trích xuất và tải nó lên Amazon S3. Tệp dữ liệu huấn luyện sẽ được viết ở định dạng CSV và sẽ được đặt tên là comprehend_train_data.csv. Lưu ý rằng bạn có thể có nhiều hơn một tệp CSV trong một S3 bucket để huấn luyện bộ phân loại tùy chỉnh của Comprehend. Nếu bạn có nhiều tệp, bạn có thể chỉ định thư mục chứa bucket/prefix khi gọi huấn luyện bộ phân loại tùy chỉnh. Amazon Comprehend sẽ tự động sử dụng tất cả các tệp dưới bucket/prefix để huấn luyện.\nCác ô mã sau sẽ tải dữ liệu huấn luyện lên S3 bucket và tạo một bộ phân loại tùy chỉnh của Comprehend. Bạn cũng có thể tạo bộ phân loại tùy chỉnh theo cách thủ công, vui lòng xem các phần tiếp theo để biết hướng dẫn chi tiết cách thực hiện điều đó. Hoàn thành việc thực thi các ô mã trong phần này để chuẩn bị tệp CSV và tải nó lên S3. Cuối bước này, chúng ta sẽ có dữ liệu huấn luyện ở định dạng CSV trong tệp có tên comprehend_train_data.csv với các class bank-statements, invoices and receipts. "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/",
	"title": "Phân loại tài liệu",
	"tags": [],
	"description": "",
	"content": "Tổng quan Phân loại tài liệu là một quá trình hai bước. Đầu tiên, bạn huấn luyện một bộ phân loại tùy chỉnh để nhận biết các loại tài liệu mà bạn quan tâm. Sau đó, bạn gửi các tài liệu chưa được gắn nhãn để phân loại.\nĐể huấn luyện bộ phân loại, bạn chỉ định các tùy chọn mong muốn và gửi tài liệu cho Amazon Comprehend để sử dụng làm tài liệu huấn luyện. Dựa trên các tùy chọn bạn đã chỉ định, Amazon Comprehend tạo ra một mô hình học máy tùy chỉnh (bộ phân loại) được huấn luyện dựa trên các tài liệu bạn cung cấp. Mô hình tùy chỉnh này sẽ kiểm tra từng tài liệu bạn gửi. Sau đó, nó sẽ trả về loại cụ thể đại diện tốt nhất cho nội dung (nếu bạn sử dụng chế độ đa loại) hoặc tập hợp các loại phù hợp (nếu bạn sử dụng chế độ đa nhãn).\nTrong bài thực hành này, chúng ta sẽ tiến hành thực hành phân loại tài liệu sử dụng Amazon Comprehend Custom Classification. Chúng ta sẽ sử dụng Amazon Textract để trích xuất văn bản từ các tài liệu, gắn nhãn chúng, và sau đó sử dụng dữ liệu này để huấn luyện bộ phân loại tùy chỉnh của Amazon Comprehend. Mục tiêu của chúng ta là - với một nhóm tài liệu chưa biết, chúng ta muốn phân loại được đâu là sao kê ngân hàng, đâu là hóa đơn và đâu là biên lai. Để chuẩn bị dữ liệu huấn luyện, chúng ta sẽ sử dụng các sao kê ngân hàng, hóa đơn và biên lai có sẵn.\nBộ tài liệu mẫu Sao kê ngân hàng Hình ảnh dưới đây là trang đầu tiên của một sao kê ngân hàng tiêu chuẩn gồm nhiều trang, với các chi tiết như tên khách hàng, địa chỉ, tổng hợp tài khoản, số dư hiện tại, v.v. Hóa đơn Hình ảnh dưới đây là một hóa đơn thanh toán tiêu chuẩn với các chi tiết như thông tin doanh nghiệp, người nhận hóa đơn, sản phẩm, mã hóa đơn, v.v. Biên lai Hình ảnh dưới đây là một biên lai cửa hàng tiêu chuẩn với các chi tiết như các mặt hàng đã mua, thông tin cửa hàng, giá bán lẻ cho mỗi mặt hàng, thuế suất bán hàng, v.v. "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-4/",
	"title": "Tạo công việc huấn luyện phân loại cho Amazon Comprehend",
	"tags": [],
	"description": "",
	"content": "Bây giờ chúng ta đã trích xuất văn bản từ các tài liệu và cũng đã gắn nhãn cho chúng, chúng ta sẽ tạo dữ liệu huấn luyện để huấn luyện một mô hình phân loại tùy chỉnh của Amazon Comprehend. Tập dữ liệu của chúng ta có 100 mẫu của mỗi loại tài liệu, vì vậy chúng ta sẽ có khoảng 300 dòng dữ liệu đã được gắn nhãn.\nChúng ta sẽ sử dụng tính năng Phân loại tùy chỉnh của Amazon Comprehend để huấn luyện mô hình của riêng mình nhằm phân loại các tài liệu. Chúng ta sử dụng API CreateDocumentClassifier để tạo một bộ phân loại sẽ huấn luyện một mô hình tùy chỉnh bằng cách sử dụng tệp CSV chứa dữ liệu đã được gắn nhãn mà chúng ta đã tạo ở trên. Dữ liệu huấn luyện bao gồm văn bản đã được trích xuất, được trích xuất bằng Amazon Textract, và sau đó đã được gắn nhãn. Các ô mã dưới đây sử dụng hàm create_document_classifier từ SDK Python boto3 để khởi tạo quá trình huấn luyện mô hình.\nTạo công việc huấn luyện Phân loại tùy chỉnh cho Amazon Comprehend Chúng ta sẽ sử dụng tính năng Phân loại tùy chỉnh của Amazon Comprehend để huấn luyện mô hình phân loại tài liệu của mình. Chúng ta sẽ sử dụng API CreateDocumentClassifier của Amazon Comprehend để tạo một bộ phân loại nhằm huấn luyện mô hình tùy chỉnh bằng cách sử dụng tệp CSV chứa dữ liệu đã được gắn nhãn mà chúng ta đã tạo ở trên. Dữ liệu huấn luyện chứa văn bản đã được trích xuất bằng Amazon Textract, và sau đó đã được gắn nhãn. Lưu ý rằng bạn cũng có thể tạo một bộ phân loại tùy chỉnh bằng cách sử dụng giao diện Amazon Comprehend console theo cách thủ công. Tham khảo tài liệu hướng dẫn để tìm hiểu thêm về cách tạo một bộ phân loại tùy chỉnh bằng console. Tiếp tục thực hiện các ô mã còn lại trong bước này. Quá trình huấn luyện bộ phân loại tùy chỉnh có thể mất khoảng 30 phút. "
},
{
	"uri": "http://localhost:1313/vi/4-documentextraction/",
	"title": "Trích xuất Tài liệu",
	"tags": [],
	"description": "",
	"content": "Trích xuất dữ liệu từ tài liệu bằng Amazon Textract Amazon Textract là một dịch vụ máy học (ML) tự động trích xuất văn bản, chữ viết tay và dữ liệu từ các tài liệu quét. Nó vượt xa khả năng nhận diện ký tự quang học đơn giản (OCR) để xác định, hiểu và trích xuất dữ liệu từ các biểu mẫu và bảng. Hãy mở rộng các phần dưới đây để tìm hiểu ngắn gọn về khả năng trích xuất tài liệu của Amazon Textract.\nPhân tích phản hồi API của Amazon Textract Bạn có thể trích xuất văn bản và thông tin dữ liệu có cấu trúc bằng cách sử dụng các API DetectDocumentText và AnalyzeDocument của Amazon Textract. Các API này trả về dữ liệu JSON chứa từ, dòng, biểu mẫu, bảng, thông tin hình học hoặc hộp giới hạn, mối quan hệ, v.v. Phản hồi JSON này có thể khó phân tích, đặc biệt là với các tài liệu lớn hoặc nhiều trang. Để làm điều này, chúng ta sẽ sử dụng một nhóm công cụ mang tên amazon-textract-textractor giúp dễ dàng lấy thông tin như từ, dòng, bảng và biểu mẫu từ tài liệu, và thu thập thông tin hộp giới hạn. Dưới đây là các tính năng có sẵn:\nA caller cung cấp một bộ chức năng sẵn sàng sử dụng và các triển khai mẫu để tăng tốc độ đánh giá và phát triển cho bất kỳ dự án nào sử dụng Amazon Textract, giúp dễ dàng gọi Amazon Textract bất kể loại tệp và vị trí. A response parser giúp dễ dàng phân tích JSON trả về từ Amazon Textract. Thư viện này phân tích JSON và cung cấp các cấu trúc ngôn ngữ lập trình cụ thể để làm việc với các phần khác nhau của tài liệu. A prettyprinter cung cấp các chức năng để định dạng đầu ra nhận được từ Amazon Textract theo các định dạng dễ tiêu thụ hơn như CSV hoặc markdown. An overlayer cung cấp thông tin hình học hộp giới hạn có thể được sử dụng cho mục đích chú thích hoặc xóa. Getting Started with Lab Trong phần này, chúng ta sẽ xem xét cách trích xuất thông tin từ các tài liệu. Mở notebook 02-idp-document-extraction.ipynb trong Amazon SageMaker Studio và làm theo các bước dưới đây. Step 1: Thiết lập notebook Trong bước này, chúng ta sẽ chọn kernel như notebook trước đó sẽ được sử dụng trong notebook này. Sau đó chạy các script trong Bước 1.\nHãy chọn một sao kê ngân hàng mà chúng ta đã phân loại trong bài tập trước. Bước 2: Trích xuất dữ liệu không có cấu trúc bằng Amazon Textract Trong bước này, chúng ta sẽ chủ yếu xem xét cách trích xuất thông tin văn bản (DÒNG và TỪ) từ một trong các sao kê ngân hàng. Dữ liệu văn bản dưới dạng TỪ và DÒNG có thể được trích xuất từ các tài liệu bằng cách sử dụng API DetectDocumentText của Amazon Textract. Đoạn mã sau gọi API để trích xuất văn bản từ tài liệu.\nAmazon Textract là một dịch vụ OCR được hỗ trợ bởi ML có khả năng phát hiện và trích xuất văn bản từ các tài liệu. Dữ liệu văn bản dưới dạng TỪ và DÒNG có thể được trích xuất từ các tài liệu bằng cách sử dụng API DetectDocumentText của Amazon Textract. Hãy trích xuất các từ và dòng từ sao kê ngân hàng. Như bạn có thể thấy, chúng ta đã có thể trích xuất DÒNG và TỪ từ tài liệu, nhưng chúng ta cũng đã mất một số định dạng cấu trúc trong tài liệu. Ví dụ, tài liệu chứa một vài bảng và chúng ta muốn trích xuất thông tin bảng trong cấu trúc bảng. Vì vậy, hãy làm điều đó tiếp theo.\nBước 3: Trích xuất dữ liệu bảng bằng Amazon Textract Trong bước này, chúng ta sẽ xem xét ngắn gọn cách trích xuất thông tin bảng từ sao kê ngân hàng. Sao kê ngân hàng của chúng ta có hai bảng. Như bạn có thể thấy, phản hồi từ Amazon Textract là một đối tượng JSON lớn chứa rất nhiều thông tin. Hãy phân tích dữ liệu bảng từ phản hồi này. Để làm điều này, chúng ta sẽ xem cách trích xuất các bảng bằng công cụ phân tích phản hồi Textract mà chúng ta đã cài đặt trước đó. Trong các ô mã ở trên, chúng ta đã sử dụng API AnalyzeDocument của Textract để trích xuất thông tin từ tài liệu và sau đó đã sử dụng trình phân tích phản hồi Textract để phân tích các bảng từ phản hồi JSON. Chúng ta có thể sử dụng các công cụ bổ sung để gọi API Textract và sử dụng công cụ trình bày đẹp để xem các bảng theo cách dễ đọc hơn một chút. Chúng ta sẽ xem cách trích xuất các bảng bằng công cụ trình bày đẹp của Textract. Chúng ta cũng sẽ sử dụng phương pháp call_textract từ công cụ Caller của Textract mà chúng ta đã cài đặt trước đó. Tập hợp các công cụ này giúp dễ dàng thực hiện các cuộc gọi API Textract và phân tích đầu ra JSON của nó. Trong các phần tiếp theo, chúng ta sẽ sử dụng những công cụ này để thực hiện các cuộc gọi API và sau đó để phân tích phản hồi JSON. Trong ô mã trên, chúng ta đã trích xuất các bảng dưới dạng danh sách Python và sau đó chuyển đổi chúng thành DataFrame của Pandas. Bạn cũng có thể trích xuất các bảng ở các định dạng khác như CSV, TSV, v.v. Step 4: Trích xuất dữ liệu biểu mẫu (khóa/giá trị) bằng Amazon Textract Hãy xem cách Amazon Textract có thể được sử dụng để trích xuất dữ liệu biểu mẫu từ tài liệu. Trong ví dụ này, chúng ta sẽ sử dụng một biểu mẫu xác nhận việc làm mẫu. Trong ví dụ trước, tài liệu của chúng ta nằm trong S3 và chúng ta đã gọi Amazon Textract bằng cách chỉ định vị trí S3 của tài liệu. Trong trường hợp này, tài liệu của chúng ta nằm trên máy tính cục bộ, chúng ta có thể tải tài liệu này lên S3, hoặc chúng ta có thể sử dụng Byte Array của tài liệu từ môi trường cục bộ của chúng ta để gọi API. Hãy sử dụng Byte Array của tài liệu cho ví dụ này. Lưu ý rằng phương pháp này chỉ áp dụng cho API Textract đồng bộ (thời gian thực), vì các API không đồng bộ chỉ hỗ trợ tài liệu đặt trong S3. Trong ô mã dưới đây, trước tiên chúng ta chuyển đổi tài liệu thành một Byte array, và sau đó gọi API AnalyzeDocument với tính năng FORMS. Sau đó, chúng ta sử dụng công cụ phân tích phản hồi Textract để phân tích các cặp khóa/giá trị của biểu mẫu và in chúng ra. Và kết quả là: Bước 5: Trích xuất dựa trên truy vấn bằng Amazon Textract Khi xử lý một tài liệu bằng Amazon Textract, bạn có thể thêm các truy vấn vào phân tích của mình để chỉ định thông tin mà bạn cần. Điều này bao gồm việc truyền một câu hỏi, chẳng hạn như \u0026ldquo;Số an sinh xã hội của khách hàng là gì?\u0026rdquo; đến Amazon Textract. Amazon Textract sau đó sẽ tìm thông tin trong tài liệu cho câu hỏi đó và trả về trong một cấu trúc phản hồi tách biệt với phần còn lại của thông tin trong tài liệu. Các truy vấn có thể được xử lý riêng lẻ hoặc kết hợp với bất kỳ FeatureType nào khác, chẳng hạn như BẢNG hoặc BIỂU MẪU. Các truy vấn có thể là một công cụ mạnh mẽ trong những tình huống mà chỉ một vài thông tin quan trọng cần thiết từ một tài liệu.\nHãy để lại một vài truy vấn để trích xuất từ biểu mẫu xác nhận việc làm của chúng ta. Bước 6: Phát hiện chữ ký với Amazon Textract Amazon Textract có thể phát hiện sự hiện diện của chữ ký trong các tài liệu. API AnalyzeDocument có bốn loại tính năng sau - Biểu mẫu, Bảng, Truy vấn và Chữ ký. Tính năng Chữ ký có thể được sử dụng riêng lẻ hoặc kết hợp với các loại tính năng khác. Khi được sử dụng riêng lẻ, loại tính năng Chữ ký cung cấp phản hồi json bao gồm a) vị trí và điểm số tin cậy của các chữ ký được phát hiện và b) văn bản thô (từ và dòng) từ tài liệu. Nếu tính năng Chữ ký được sử dụng cùng với tính năng Biểu mẫu mà trích xuất các cặp khóa giá trị trong một biểu mẫu, chữ ký được phát hiện sẽ được liên kết với giá trị của khóa liên quan. Tương tự, khi được sử dụng cùng với loại tính năng Bảng, chữ ký được phát hiện sẽ được liên kết với một ô trong bảng.\nHãy thử phát hiện chữ ký trong biểu mẫu xác nhận việc làm của chúng ta. Textract đã phát hiện ba chữ ký trong tài liệu cùng với thông tin hộp giới hạn và điểm số tin cậy của chúng.\nTrích xuất hóa đơn/biên lai bằng Amazon Textract Bây giờ hãy xem API AnalyzeExpense để trích xuất thông tin từ một tài liệu hóa đơn. Điều quan trọng cần lưu ý là Textract cung cấp khả năng trích xuất riêng biệt \u0026ldquo;các mục dòng\u0026rdquo; trong hóa đơn và \u0026ldquo;Summary\u0026rdquo; của hóa đơn. Bước 8: Trích xuất tài liệu danh tính bằng Amazon Textract Để xem cách trích xuất tài liệu danh tính hoạt động với Amazon Textract, chúng ta sẽ sử dụng một tài liệu hộ chiếu mẫu. Hộ chiếu là một tài liệu đặc biệt, tức là một tài liệu danh tính. Để trích xuất thông tin từ hộ chiếu và giấy phép lái xe của Hoa Kỳ, API AnalyzeID của Amazon Textract có thể được sử dụng. Chúng ta sẽ sử dụng công cụ call_textract_analyzeid từ thư viện amazon-textract-textractor. Lưu ý rằng trong lệnh gọi đến call_textract_analyzeid bạn cũng có thể truyền một đường dẫn S3 vào tham số document_pages as call_textract_analyzeid(document_pages=[\u0026quot;s3://bucket/prefix/doc.png\u0026quot;])\nHãy xem thông tin đã trích xuất từ tài liệu hộ chiếu. Lưu ý rằng các khóa được chuẩn hóa, điều này giúp dễ dàng phân tích thông tin cần thiết từ phản hồi JSON từ Textract. "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-5/",
	"title": "Phân loại tài liệu với bộ phân loại tùy chỉnh của Amazon Comprehend",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ sử dụng mô hình phân loại tùy chỉnh của Amazon Comprehend để phân loại các tài liệu mẫu. Chúng ta sẽ sử dụng API start_document_classification_job để khởi chạy một công việc không đồng bộ nhằm phân loại các tài liệu. API này hỗ trợ các tài liệu ở định dạng gốc của chúng (PDF/PNG/JPG/TIF) và có thể sử dụng Amazon Textract ở chế độ nền để đọc văn bản từ các tài liệu và sau đó xác định loại tài liệu. Hãy bắt đầu bằng cách tải các tài liệu mẫu của chúng ta lên S3 bucket. Phân loại không đồng bộ của Amazon Comprehend hoạt động với các tệp PDF, PNG, JPEG cũng như các tệp văn bản mã hóa UTF-8. Vì các tài liệu mẫu của chúng ta trong thư mục samples có định dạng PNG, chúng ta sẽ chỉ định một DocumentReadAction và sử dụng Amazon Textract với tùy chọn TEXTRACT_DETECT_DOCUMENT_TEXT. Điều này sẽ thông báo cho Amazon Comprehend sử dụng API DetectDocumentText của Amazon Textract để trích xuất văn bản và sau đó thực hiện phân loại. Đối với InputFormat, chúng ta sẽ sử dụng chế độ ONE_DOC_PER_FILE, có nghĩa là mỗi tệp là một tài liệu riêng lẻ (chế độ khác là ONE_DOC_PER_LINE, có nghĩa là mỗi dòng trong tệp văn bản là một tài liệu, điều này thích hợp cho các tài liệu nhỏ như đánh giá sản phẩm hoặc bản ghi cuộc trò chuyện dịch vụ khách hàng, v.v.). Kiểm tra trạng thái của công việc phân loại Khối mã dưới đây sẽ kiểm tra trạng thái của công việc phân loại. Nếu công việc hoàn thành, nó sẽ tải xuống kết quả dự đoán. Kết quả là một tệp zip chứa kết quả suy luận cho mỗi tài liệu được phân loại. Tệp zip cũng sẽ chứa kết quả của quá trình Textract mà Amazon Comprehend đã thực hiện. Tiếp tục chạy mã Hãy xem kết quả phân loại của Amazon Comprehend. Chúng ta đã thu thập kết quả cho tất cả các tệp trong biến documents. Script ở trên sẽ tải xuống và giải nén tệp zip vào máy cục bộ, vì vậy bạn có thể điều hướng vào thư mục classification-output từ bảng duyệt tệp ở phía bên trái và kiểm tra các tệp một cách thủ công. Các tài liệu của chúng ta trong thư mục samples/mixedbag hiện đã được phân loại. Chúng ta sẽ tải chúng lên S3 với nhãn tiền tố phù hợp. Quá trình phân loại của Amazon Comprehend cũng đã tạo ra kết quả Textract từ các tài liệu (có trong thư mục classification-output/amazon-textract-output). Thư mục này chứa một thư mục cho mỗi tài liệu với phản hồi JSON của Amazon Textract. Hãy tải văn bản thô của mỗi tài liệu này vào khung dữ liệu. Chúng ta sẽ sử dụng công cụ pretty printer để lấy các dòng văn bản từ các tài liệu. Tiếp tục với bài thực hành.\n"
},
{
	"uri": "http://localhost:1313/vi/5-documentextractionandenrichment/",
	"title": "Trích xuất và làm phong phú tài liệu",
	"tags": [],
	"description": "",
	"content": " ⚠️ YÊU CẦU TIÊN QUYẾT: Để thực hiện notebook này, hãy chắc chắn rằng bạn đã hoàn thành notebook đầu tiên 01-idp-document-classification.ipynb\nTổng quan Tính đến thời điểm này, trong hai mô-đun trước, chúng ta đã phân loại tài liệu và xác định các tài liệu sao kê ngân hàng, hóa đơn và biên lai. Trong mô-đun này, chúng ta sẽ xem xét các thực thể mặc định của Amazon Comprehend và cũng sẽ đào tạo một bộ nhận diện thực thể tùy chỉnh của Amazon Comprehend và triển khai một endpoint với nó. Mục đích của bộ nhận diện thực thể tùy chỉnh là xác định các thực thể cụ thể và tạo ra siêu dữ liệu tùy chỉnh về tài liệu của chúng ta dưới định dạng CSV để sau này được phân tích theo trường hợp sử dụng kinh doanh. Ngoài ra, chúng ta cũng muốn xác định bất kỳ số tài khoản tiết kiệm và tài khoản kiểm tra nào trong các sao kê ngân hàng và thực hiện việc che đi chúng. Nhận diện thực thể tên (NER) là gì? Nhận diện thực thể tên (NER) là một nhiệm vụ con trong xử lý ngôn ngữ tự nhiên (NLP) liên quan đến việc sàng lọc qua dữ liệu văn bản để xác định các cụm danh từ gọi là thực thể tên và phân loại mỗi thực thể với một nhãn, chẳng hạn như người, tổ chức hoặc thương hiệu. Ví dụ, trong câu \u0026ldquo;Gần đây tôi đã đăng ký Amazon Prime\u0026rdquo;, \u0026ldquo;Amazon Prime\u0026rdquo; là thực thể tên và có thể được phân loại là một thương hiệu.\nBắt đầu Mở notebook 03-idp-document-enrichment.ipynb và làm theo các bước dưới đây. Bước 1: Thiết lập notebook Trong bước này, chúng ta sẽ nhập một số thư viện cần thiết sẽ được sử dụng trong suốt notebook này. Bước 2: Thực hiện Nhận diện Thực thể Tên bằng Amazon Comprehend Chúng ta đã phân loại tài liệu của mình theo các loại tài liệu tương ứng và lưu chúng vào S3. Tiếp theo, chúng ta sẽ thực hiện nhận diện thực thể cho 1 sao kê ngân hàng và 1 biên lai bằng cách sử dụng Amazon Comprehend NER; trong trường hợp này, Comprehend sẽ trích xuất các loại thực thể chung được xây dựng sẵn từ các tài liệu.\nChúng ta sẽ bắt đầu bằng cách tải văn bản tài liệu đã trích xuất từ S3 vào một dataframe và sau đó sử dụng API DetectEntities của Amazon Comprehend. Thực hiện trích xuất thực thể trên Sao kê Ngân hàng.\nBạn có thể thấy nhiều thực thể trong văn bản từ sao kê ngân hàng mẫu của chúng ta. Lưu ý rằng đây là các thực thể mặc định mà Amazon Comprehend đã phát hiện bằng cách sử dụng bộ nhận diện thực thể được đào tạo trước.\nMặc dù việc trích xuất thực thể hoạt động khá tốt trong việc xác định các loại thực thể chung cho mọi thứ trong tài liệu, chúng ta cần các thực thể cụ thể được nhận diện cho trường hợp sử dụng của mình. Cụ thể, chúng ta cần xác định số tài khoản tiết kiệm và tài khoản kiểm tra của khách hàng; ví dụ, chúng ta muốn các loại thực thể là \u0026ldquo;CHECKING_AC\u0026rdquo; và \u0026ldquo;SAVINGS_AC\u0026rdquo;.\nBộ nhận diện thực thể được xây dựng trước của Amazon Comprehend không nhận thức được các loại thực thể này, vì vậy chúng ta sẽ cần đào tạo và sử dụng một bộ nhận diện thực thể tùy chỉnh trong notebook này. Chúng ta cũng sẽ thực hiện một số làm phong phú tài liệu; ví dụ, trong sao kê ngân hàng, chúng ta muốn che đi số tài khoản của khách hàng. Chúng ta sẽ thảo luận thêm và thực hiện tất cả những điều này trong notebook tiếp theo.\nBước 3: Đào tạo bộ nhận diện thực thể tùy chỉnh Amazon Comprehend Chúng ta sẽ đào tạo một bộ nhận diện thực thể tùy chỉnh của Amazon Comprehend. Có hai cách để đào tạo một bộ nhận diện tùy chỉnh:\nUsing Annotations Using Entity Lists Ghi chú sử dụng một tập hợp lớn các tệp PDF đã được chú thích. Những chú thích này có thể được tạo ra bằng dịch vụ như Amazon Ground Truth, nơi các nhân viên thực sự có thể xem xét các tệp của bạn và chú thích chúng. Phương pháp này khá phức tạp và nếu bạn muốn tìm hiểu thêm, hãy tham khảo blog này và blog này. Trong trường hợp của chúng ta, chúng ta sẽ sử dụng Danh sách Thực thể, là một tệp CSV chứa các văn bản và loại thực thể tương ứng của chúng. Các thực thể trong tệp này sẽ được xác định cụ thể theo nhu cầu kinh doanh của chúng ta. Để phục vụ cho bài tập này, chúng ta đã cung cấp một danh sách thực thể dưới định dạng CSV trong thư mục /entity-training/ có tên là entitylist.csv. Tệp này chứa loại thực thể tùy chỉnh cho số tài khoản của khách hàng. Chúng ta đã sử dụng CHECKING_AC và SAVINGS_AC làm các loại thực thể tùy chỉnh. Với điều này, chúng ta cuối cùng cần bộ nhận diện thực thể tùy chỉnh nhận diện các số tài khoản tiết kiệm và tài khoản kiểm tra.\nHãy xem danh sách thực thể của chúng ta. Hãy đào tạo một bộ nhận diện thực thể tùy chỉnh với Amazon Comprehend. Để đào tạo một bộ nhận diện thực thể tùy chỉnh, chúng ta sẽ cần danh sách thực thể và tập hợp các tài liệu để đào tạo mô hình. Chúng ta sẽ sử dụng cùng một tập hợp tài liệu mà chúng ta đã sử dụng trước đó để đào tạo bộ phân loại tùy chỉnh cho mục đích này.\nMỗi thực thể tùy chỉnh cần ít nhất 100 mẫu trong tập dữ liệu (các tài liệu) để phục vụ cho mục đích đào tạo, có nghĩa là bạn nên có ít nhất 100 tài liệu chứa các ví dụ về mỗi thực thể tùy chỉnh trong tập dữ liệu đào tạo của bạn. Ngoài ra, cần tối thiểu 250 sự trùng khớp thực thể cho mỗi thực thể trong danh sách thực thể để đào tạo một mô hình cho nhận diện thực thể tùy chỉnh. Chúng ta đã cung cấp một tập dữ liệu đào tạo có tên entity_training_corpus.csv có thể được sử dụng để đào tạo bộ nhận diện thực thể cùng với danh sách thực thể. Lưu ý rằng tập dữ liệu này được tạo ra theo cách tương tự như cách mà chúng ta đã tạo dữ liệu đào tạo cho việc đào tạo bộ phân loại tùy chỉnh trong notebook đầu tiên. Với hai tập dữ liệu này, chúng ta sẽ sử dụng API CreateEntityRecognizer của Amazon Comprehend.\nBây giờ hãy đào tạo một bộ nhận diện thực thể tùy chỉnh với dữ liệu này và danh sách thực thể về số tài khoản tiết kiệm và kiểm tra. Kiểm tra trạng thái của công việc bộ nhận diện thực thể tùy chỉnh Comprehend Bước 4: Tạo endpoint bộ nhận diện thực thể tùy chỉnh theo thời gian thực Chúng ta sẽ tạo một điểm cuối bộ nhận diện thực thể theo thời gian thực với bộ nhận diện thực thể đã được đào tạo. Khi đã được tạo, điểm cuối này có thể được tìm thấy trong bảng điều khiển Amazon Comprehend. Document Enrichment 1 Bây giờ chúng ta đã có một điểm cuối bộ nhận diện thực thể theo thời gian thực, bằng cách sử dụng nó, chúng ta có thể trích xuất các thực thể tùy chỉnh từ một trong các tài liệu sao kê ngân hàng của mình. Bây giờ, thay vì trả về các thực thể chung, Amazon Comprehend đang trả về cho chúng ta các thực thể từ tài liệu quét mà chúng ta quan tâm, tức là số tài khoản kiểm tra và tiết kiệm. Enrichment 2: Thực hiện việc che đi thông tin trong tài liệu Chúng ta vẫn cần thực hiện một số làm phong phú trên tài liệu. Vì tài liệu chứa số tài khoản tiết kiệm và tài khoản kiểm tra của khách hàng, chúng ta muốn che đi những thông tin này. Vì chúng ta đã biết, thông qua thực thể tùy chỉnh của mình, số tài khoản tiết kiệm và tài khoản kiểm tra của khách hàng, chúng ta có thể dễ dàng sử dụng dữ liệu hình học của Amazon Textract để che đi thông tin đó ở bất cứ đâu trong tài liệu. Chúng ta sẽ chọn một sao kê ngân hàng từ danh sách tài liệu của mình, lấy vị trí S3 của tài liệu và thực hiện các hành động sau:\nSử dụng Amazon Textract để lấy thông tin hình học, tức là các hộp bao quanh, của tất cả các dòng trong tài liệu. Sử dụng văn bản đã trích xuất ở trên để xác định các thực thể CHECKING_AC và SAVINGS_AC, bằng cách sử dụng bộ nhận diện thực thể tùy chỉnh của Comprehend. Tìm hộp bao quanh cho các từ CHECKING_AC và SAVINGS_AC từ phản hồi của Textract. Sử dụng dữ liệu hình học của hộp bao quanh để chú thích tài liệu và che đi tên và địa chỉ của khách hàng. Hàm trên tìm các thực thể tùy chỉnh trong tài liệu, tìm thông tin hình học tương ứng của văn bản thực thể tùy chỉnh và thực hiện việc che đi thông tin trong tài liệu. Hãy gọi hàm này cho một sao kê ngân hàng mẫu. Khi tệp đã được che đi được tạo ra, hãy cùng xem nó\u0026hellip; Như bạn có thể thấy, các số tài khoản kiểm tra và tiết kiệm đã được ẩn trong tài liệu.\nKết luận Trong notebook này, chúng ta đã đào tạo một bộ nhận diện thực thể tùy chỉnh của Amazon Comprehend bằng cách sử dụng danh sách thực thể của riêng mình để có thể trích xuất những thực thể đó từ các tài liệu. Chúng ta đã sử dụng 2 thực thể CHECKING_AC và SAVINGS_AC. Sau đó, chúng ta đã tạo một điểm cuối với bộ nhận diện thực thể tùy chỉnh và thực hiện detect_entities với điểm cuối đó trên một trong các sao kê ngân hàng. Cuối cùng, chúng ta đã lưu các thực thể đã trích xuất vào một tệp CSV và tải lên S3 để phân tích thêm.\nChúng ta vẫn cần thực hiện một số làm phong phú trên tài liệu. Vì tài liệu chứa số tài khoản kiểm tra và tiết kiệm của khách hàng, chúng ta muốn che đi những thông tin đó. Với việc đã biết số tài khoản kiểm tra và tiết kiệm của khách hàng thông qua thực thể tùy chỉnh, chúng ta đã sử dụng dữ liệu hình học của Amazon Textract để che đi thông tin đó trong tài liệu.\n"
},
{
	"uri": "http://localhost:1313/vi/6-documentreviewandverification/",
	"title": "Xem xét và Xác minh Tài liệu",
	"tags": [],
	"description": "",
	"content": "Overview Amazon Augmented AI (Amazon A2I) giúp đơn giản hóa việc xây dựng các quy trình làm việc cần thiết cho việc xem xét dự đoán của máy học (ML) bởi con người. Amazon A2I mang đến sự xem xét của con người cho tất cả các nhà phát triển, loại bỏ những công việc nặng nề không phân biệt liên quan đến việc xây dựng hệ thống xem xét con người hoặc quản lý số lượng lớn người đánh giá.\nAmazon A2I cung cấp các quy trình làm việc xem xét con người tích hợp cho các trường hợp sử dụng máy học phổ biến, chẳng hạn như quản lý nội dung và trích xuất văn bản từ tài liệu, giúp dễ dàng xem xét các dự đoán từ Amazon Rekognition và Amazon Textract. Bạn cũng có thể tạo các quy trình làm việc của riêng mình cho các mô hình máy học được xây dựng trên Amazon SageMaker hoặc bất kỳ công cụ nào khác. Sử dụng Amazon A2I, bạn có thể cho phép người đánh giá can thiệp khi một mô hình không thể đưa ra dự đoán với độ tin cậy cao hoặc để kiểm tra dự đoán của nó một cách liên tục.\nTài nguyên cần thiết cho A2I Để tích hợp Amazon A2I vào quy trình làm việc xem xét con người của bạn, bạn cần ba tài nguyên. Mở rộng các phần dưới đây để tìm hiểu thêm về từng tài nguyên.\nWorker task template A worker task template để tạo giao diện người dùng cho người lao động. Giao diện người lao động hiển thị dữ liệu đầu vào của bạn, chẳng hạn như tài liệu hoặc hình ảnh, và hướng dẫn cho người lao động. Nó cũng cung cấp các công cụ tương tác mà người lao động sử dụng để hoàn thành nhiệm vụ của bạn.\nHuman review workflow A human review workflow, còn được gọi là định nghĩa luồng. Bạn sử dụng định nghĩa luồng để cấu hình lực lượng lao động con người của mình và cung cấp thông tin về cách thực hiện nhiệm vụ xem xét con người. Đối với các loại nhiệm vụ tích hợp sẵn, bạn cũng sử dụng định nghĩa luồng để xác định các điều kiện mà vòng lặp xem xét con người được kích hoạt. Ví dụ, với Amazon Textract, có thể phân tích văn bản trong một tài liệu bằng cách sử dụng máy học. Bạn có thể sử dụng định nghĩa luồng để chỉ định rằng một tài liệu sẽ được gửi cho một người để xem xét quản lý nội dung nếu điểm số tin cậy của đầu ra từ Amazon Textract thấp cho bất kỳ hoặc tất cả các phần văn bản được trả về bởi Textract. Bạn có thể tạo định nghĩa luồng trong bảng điều khiển Amazon Augmented AI hoặc với các API Amazon A2I.\nHuman loop A human loop để bắt đầu quy trình làm việc xem xét con người của bạn. Khi bạn sử dụng một trong các loại nhiệm vụ tích hợp sẵn, dịch vụ AWS tương ứng sẽ tạo và bắt đầu một vòng lặp con người thay mặt bạn khi các điều kiện được chỉ định trong định nghĩa luồng của bạn được đáp ứng hoặc cho mỗi đối tượng nếu không có điều kiện nào được chỉ định. Khi một vòng lặp con người được kích hoạt, các nhiệm vụ xem xét con người sẽ được gửi đến người lao động như đã chỉ định trong định nghĩa luồng.\nKhi sử dụng một loại nhiệm vụ tùy chỉnh, bạn bắt đầu một vòng lặp con người bằng cách sử dụng API Amazon Augmented AI Runtime. Khi bạn gọi StartHumanLoop trong ứng dụng tùy chỉnh của mình, một nhiệm vụ sẽ được gửi đến những người đánh giá con người.\n"
},
{
	"uri": "http://localhost:1313/vi/7-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "WChúng ta sẽ thực hiện các bước sau để xóa các tài nguyên đã tạo trong bài tập này.\nĐi tới notebook 05-idp-cleanup.ipynb và làm theo các ô mã để xóa các tài nguyên đã tạo trong tài khoản. Truy cập Amazon Comprehend console để xác minh xem tất cả các endpoint và mô hình đã bị xóa. Truy cập Amazon S3 console, điều hướng đến bucket có tên sagemaker-studio\u0026lt;xxxxxxx\u0026gt; và idp-a2i-xxxxxx, và xác minh xem mọi thứ trong các bucket đã bị xóa. Truy cập CloudFormation và xóa "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-6/",
	"title": "Tạo endpoint thời gian thực cho Amazon Comprehend (tùy chọn)",
	"tags": [],
	"description": "",
	"content": "Để sử dụng mô hình bộ phân loại tùy chỉnh của Amazon Comprehend, chúng ta cần tạo một endpoint thời gian thực. Các endpoint thời gian thực có thể được tạo ra thông qua mã lập trình bằng cách sử dụng client Boto3 của Comprehend hoặc bằng tay thông qua bảng điều khiển. Để tìm hiểu cách tạo một endpoint thời gian thực bằng bảng điều khiển, hãy tham khảo tài liệu. Chúng ta sử dụng API CreateEndpoint thông qua phương thức comprehend.create_endpoint() của Boto3 để tạo endpoint thời gian thực.\nKhi bộ phân loại tùy chỉnh của chúng ta đã được huấn luyện hoàn toàn (tức là trạng thái = TRAINED), chúng ta có thể tạo một endpoint thời gian thực. Chúng ta sẽ sử dụng endpoint này để phân loại tài liệu trong thời gian thực. Các khối mã sau đây sử dụng client Boto3 của Comprehend để tạo một endpoint, nhưng bạn cũng có thể tạo một endpoint bằng tay qua bảng điều khiển. Hướng dẫn về cách làm điều đó có thể được tìm thấy trong phần tiếp theo. Có thể mất khoảng 15 phút để endpoint được tạo. Khi endpoint được tạo thành công, bạn có thể bắt đầu phân loại các tài liệu (đây là bộ tài liệu không xác định của chúng ta) trong thư mục /samples/mixedbag. Hãy nhớ rằng mục tiêu của chúng ta là phân loại các tài liệu không xác định này thành các loại sao kê ngân hàng, hóa đơn và biên lai tương ứng. "
},
{
	"uri": "http://localhost:1313/vi/3-documentclassification/step-7/",
	"title": "Phân loại tài liệu với endpoint thời gian thực (tùy chọn)",
	"tags": [],
	"description": "",
	"content": "Bước tiếp theo là sử dụng endpoint thời gian thực của Amazon Comprehend để phân loại các tài liệu này. Chúng ta sử dụng hàm comprehend.classify_document() với văn bản tài liệu đã được trích xuất và endpoint suy diễn làm các tham số đầu vào. Để phân loại một tài liệu mẫu, chúng ta sẽ chuyển đổi tài liệu thành ByteArray và sau đó sử dụng API classify_document của Textract để phân loại nó. Vì classify_document là một API thời gian thực (đồng bộ), chúng ta sẽ gọi nó với byte tài liệu của tài liệu mẫu trên. Một lần nữa, như trước đây, chúng ta sẽ để Amazon Comprehend sử dụng Amazon Textract trong nền để đọc tài liệu và sau đó phân loại nó. Vì chúng ta cho phép Comprehend sử dụng Amazon Textract trong nền để trích xuất văn bản, chúng ta sẽ bị giới hạn sử dụng tài liệu một trang.\nKhi endpoint đã được tạo, chúng ta sẽ sử dụng một loạt tài liệu trong thư mục /samples/mixedbag/ và cố gắng phân loại chúng thành tài liệu sao kê ngân hàng, hóa đơn và biên lai tương ứng. Hãy xem một trong những tài liệu: Để phân loại tài liệu mẫu này, chúng ta sẽ trước tiên chuyển đổi tài liệu thành ByteArray và sau đó sử dụng API classify_document của Textract để phân loại nó. Vì classify_document là một API thời gian thực (đồng bộ), chúng ta sẽ gọi nó với byte tài liệu của tài liệu mẫu trên. Một lần nữa, như trước đây, chúng ta sẽ để Amazon Comprehend sử dụng Amazon Textract trong nền để đọc tài liệu và sau đó phân loại nó. Vì chúng ta cho phép Comprehend sử dụng Amazon Textract trong nền để trích xuất văn bản, chúng ta sẽ bị giới hạn sử dụng tài liệu một trang. Bây giờ hãy chạy suy diễn trên tài liệu mẫu của chúng ta: Lưu ý rằng Comprehend sẽ trả về tất cả các loại tài liệu với điểm số tin cậy liên kết với mỗi loại trong một mảng các cặp khóa-giá trị (Tên-Điểm số), chúng ta có thể chọn chỉ loại tài liệu có điểm số tin cậy cao nhất từ phản hồi của endpoint.\nKết luận Trong notebook này, chúng ta đã huấn luyện một bộ phân loại tùy chỉnh của Amazon Comprehend bằng cách sử dụng các tài liệu mẫu của chúng ta, bằng cách trích xuất văn bản từ các tài liệu sử dụng Amazon Textract và gán nhãn dữ liệu vào định dạng tệp CSV cho tập dữ liệu huấn luyện. Sau đó, chúng ta đã huấn luyện một bộ phân loại tùy chỉnh của Amazon Comprehend với văn bản đã trích xuất và tạo một endpoint thời gian thực của Amazon Comprehend để thực hiện phân loại một tập hợp tài liệu không xác định.\nTrong notebook tiếp theo, chúng ta sẽ xem xét một số phương pháp để trích xuất những hiểu biết quan trọng từ các tài liệu của chúng ta bằng cách sử dụng Amazon Textract.\n"
},
{
	"uri": "http://localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]